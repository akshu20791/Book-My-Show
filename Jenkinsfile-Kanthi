pipeline{

    agent any
    tools {
        jdk 'jdk'
        nodejs 'node'
    }


    environment{
        SCANNER_HOME = tool 'sonar-scanner'
        DOCKER_CREDS = credentials('docker-cred')
    }

    stages{
        stage('Clean Workspace') {
            steps {
                cleanWs()
            }
        }

        stage('Git repo'){
            steps{
                 git branch: 'feature', url: 'https://github.com/Kanthireddy/Book-My-Show.git'
            }
        }

        stage('Code Quality Analysis'){
            steps{
                 withSonarQubeEnv('sonar-server') {
                    sh ' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=BMS -Dsonar.projectKey=BMS '
                }

            }
        }

        stage('Quality Gate check') {
            steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token'
                }
            }
        }
        stage('Install Dependencies') {
            steps {
                sh '''
                cd bookmyshow-app
                ls -la  # Verify package.json exists
                if [ -f package.json ]; then
                    rm -rf node_modules package-lock.json  # Remove old dependencies
                    npm install  # Install fresh dependencies
                else
                    echo "Error: package.json not found in bookmyshow-app!"
                    exit 1
                fi
                '''
            }
        }

        stage('Docker Image build'){
            steps {
                    script{
                        sh """
                        echo ${DOCKER_CREDS_PSW} | docker login -u ${DOCKER_CREDS_USR} --password-stdin
                        docker build -f bookmyshow-app/Dockerfile-Kanthi -t kanthi123/bms:latest bookmyshow-app
                        docker push kanthi123/bms:latest
                        docker run -p 3000:3000 kanthi123/bms:latest
                        """
                    }
            }
        }



    }
}
